version: '3'

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.1
    volumes:
      - "kafka_data1:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=host.docker.internal
      - KAFKA_AUTO_LEADER_REBALANCE_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka2:
    image: docker.io/bitnami/kafka:3.1
    volumes:
      - "kafka_data2:/bitnami"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=host.docker.internal
      - KAFKA_AUTO_LEADER_REBALANCE_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper


  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9009:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

  redis:
    image: redis:3.2.3-alpine
    restart: on-failure
    ports:
      - "6380:6379"

  php:
    build: ./docker/php
    environment:
      - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
      - PHP_XDEBUG_MODE=${XDEBUG_MODE:-off}
      - NGINX_CACHE_ENABLE=0
      - PHP_DISPLAY_ERRORS=On
      - APP_ENV=dev
      - SYMFONY_ENV=dev
    working_dir: /var/www
    volumes:
      - .:/var/www:cached
      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    depends_on:
      - kafka
      - zookeeper
      - redis

  node:
    build: ./docker/node
    working_dir: /var/www
    volumes:
      - ./nodeapp:/var/www:cached
    depends_on:
      - kafka
      - zookeeper

  # MongoDB: https://hub.docker.com/_/mongo/
  mongo:
    image: mongo:4.2

  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:4.2
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=atrapalotechpeople
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    restart: always
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9097:9000
      # Syslog TCP
      - 1515:1515
      # Syslog UDP
      - 1515:1515/udp
      # GELF TCP
      - 12202:12202
      # GELF UDP
      - 12202:12202/udp


volumes:
  zookeeper_data:
    driver: local
  kafka_data1:
    driver: local
  kafka_data2:
    driver: local
